There will be list with Exercises from codingbat in format (title of exercise: 
																			  code)
																			  
stringTimes
public String stringTimes(String str, int n) {
  String cop = str;
  str = "";
  for (int z = n; z > 0; z--) {
    str = str + cop;
  }
  return str;
}

doubleX
boolean doubleX(String str) {
		  boolean st = false;
		  boolean nd = false;		  
	  
		  for (int i = 0; i < str.length()-1; i++) {		
		    if (str.substring(i,i+1).equals("x")) {
		      st = true;
		      if (str.substring(i+1,i+2).equals("x")) {
		        nd = true;
		        if (st && nd) return true;
		      }
		      return false;
		    }		    
		  }
		  return false;
}

last2
public int last2(String str) {
  int count =0;
  for (int i=0; i < str.length()-2; i++) {
    if (str.substring(i,i+2).equals(str.substring(str.length()-2,str.length()))) {
      count++;
    }
  }
  return count;
}

array123
public boolean array123(int[] nums) {
  for (int i=0; i < nums.length-2; i++) {
    if (nums[i] == 1 && nums[i+1] == 2 && nums[i+2] == 3) return true;
  }
  return false;
}

arrayCount9
public int arrayCount9(int[] nums) {
  int count = 0;
  for (int i=0; i < nums.length; i++) {
    if (nums[i] == 9) {
      count ++;
    }
  }
  return count;
}

stringMatch
public int stringMatch(String a, String b) {
   int count = 0;	
		  for (int i=0; i < Math.min(a.length()-1, b.length()-1); i++) {
			  if (a.substring(i, i+2).equals(b.substring(i, i+2))) 
		    	  count++;		      		    
		  }
		  return count;
}

countXX
int countXX(String str) {
  int length = str.length();
  int a = 0;
  int count = 0;
  int b = 2;
  
  if (str.length() <= 1) return 0;
  
  for (int i = 0; i < str.length()-1; i++) {
    if (str.substring(a,b).equals("xx")) {
      count++;
    }
    a++;
    b++;
  }
  return count;
}

stringSplosion
public String stringSplosion(String str) {
  String result = "";
  for (int i=0; i < str.length(); i++) {
    result = result + str.substring(0,i+1);
  }
  return result;
}

arrayFront9
public boolean arrayFront9(int[] nums) {
  int four = 4;
  if (nums.length < 4) four = nums.length;
  for (int i=0; i<four; i++) {
    if (nums[i] == 9) 
    	return true;
  }
  return false;
}

stringX
public String stringX(String str) {
  int len = str.length();
  String res = "";
    if (str.length() < 1 || (str.substring(0,1).equals("x") && str.length() == 1)) {
    return str;
  }
  for (int i=0; i<len; i++) {
    if (!str.substring(i, i+1).equals("x")) {
      res = res + str.substring(i, i+1);
    }
  }
  if (str.substring(0,1).equals("x")) {
    res = "x" + res;
  }
  if (str.substring(str.length()-1, str.length()).equals("x")) {
    res = res + "x";
  }
  if (str.length() < 1 || (str.substring(0,1).equals("x") && str.length() < 1)) {
    return str;
  }
  return res;
  
}

array667
public int array667(int[] nums) {
  int count = 0;
  for (int i=0; i < nums.length-1; i++) {
    if (nums[i] == 6 && ((nums[i+1] == 6) || (nums[i+1] == 7))) {
      count++;
    }
  }
  return count;
}

firstTwo (String-1 chapter)
public String firstTwo(String str) {
  
  if (str.length() < 3) return str;
  return str.substring(0,2);
}

repeatSeparator (String-2 chapter)
public String repeatSeparator(String word, String sep, int count) {
  String result = word;
  
  if (count == 0) return "";
  
  for (int i = 0; i < count-1; i++) {
    if (count < 2) return result;
    result += sep + word;
  }
  return result;
}


